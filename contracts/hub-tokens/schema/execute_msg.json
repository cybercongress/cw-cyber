{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "UpdateOwner"
      ],
      "properties": {
        "UpdateOwner": {
          "type": "object",
          "properties": {
            "new_owner": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "CreateEntry"
      ],
      "properties": {
        "CreateEntry": {
          "type": "object",
          "required": [
            "chain_id",
            "channel",
            "contract",
            "decimals",
            "logo",
            "ticker"
          ],
          "properties": {
            "chain_id": {
              "type": "string"
            },
            "channel": {
              "$ref": "#/definitions/Uint64"
            },
            "contract": {
              "type": "string"
            },
            "decimals": {
              "$ref": "#/definitions/Uint64"
            },
            "logo": {
              "type": "string"
            },
            "particle": {
              "type": [
                "string",
                "null"
              ]
            },
            "ticker": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "UpdateEntry"
      ],
      "properties": {
        "UpdateEntry": {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "chain_id": {
              "type": [
                "string",
                "null"
              ]
            },
            "channel": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Uint64"
                },
                {
                  "type": "null"
                }
              ]
            },
            "contract": {
              "type": [
                "string",
                "null"
              ]
            },
            "decimals": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Uint64"
                },
                {
                  "type": "null"
                }
              ]
            },
            "id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "logo": {
              "type": [
                "string",
                "null"
              ]
            },
            "particle": {
              "type": [
                "string",
                "null"
              ]
            },
            "ticker": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "DeleteEntry"
      ],
      "properties": {
        "DeleteEntry": {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Uint64": {
      "description": "A thin wrapper around u64 that is using strings for JSON encoding/decoding, such that the full u64 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u64` to get the value out:\n\n``` # use cosmwasm_std::Uint64; let a = Uint64::from(42u64); assert_eq!(a.u64(), 42);\n\nlet b = Uint64::from(70u32); assert_eq!(b.u64(), 70); ```",
      "type": "string"
    }
  }
}
