{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "CyberMsgWrapper",
  "type": "object",
  "required": [
    "msg_data",
    "route"
  ],
  "properties": {
    "msg_data": {
      "$ref": "#/definitions/CyberMsg"
    },
    "route": {
      "$ref": "#/definitions/CyberRoute"
    }
  },
  "definitions": {
    "Coin": {
      "type": "object",
      "required": [
        "amount",
        "denom"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "denom": {
          "type": "string"
        }
      }
    },
    "CyberMsg": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "cyberlink"
          ],
          "properties": {
            "cyberlink": {
              "type": "object",
              "required": [
                "links",
                "neuron"
              ],
              "properties": {
                "links": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Link"
                  }
                },
                "neuron": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "investmint"
          ],
          "properties": {
            "investmint": {
              "type": "object",
              "required": [
                "amount",
                "length",
                "neuron",
                "resource"
              ],
              "properties": {
                "amount": {
                  "$ref": "#/definitions/Coin"
                },
                "length": {
                  "type": "integer",
                  "format": "uint64",
                  "minimum": 0.0
                },
                "neuron": {
                  "type": "string"
                },
                "resource": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "create_energy_route"
          ],
          "properties": {
            "create_energy_route": {
              "type": "object",
              "required": [
                "destination",
                "name",
                "source"
              ],
              "properties": {
                "destination": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "source": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "edit_energy_route"
          ],
          "properties": {
            "edit_energy_route": {
              "type": "object",
              "required": [
                "destination",
                "source",
                "value"
              ],
              "properties": {
                "destination": {
                  "type": "string"
                },
                "source": {
                  "type": "string"
                },
                "value": {
                  "$ref": "#/definitions/Coin"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "edit_energy_route_name"
          ],
          "properties": {
            "edit_energy_route_name": {
              "type": "object",
              "required": [
                "destination",
                "name",
                "source"
              ],
              "properties": {
                "destination": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "source": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "delete_energy_route"
          ],
          "properties": {
            "delete_energy_route": {
              "type": "object",
              "required": [
                "destination",
                "source"
              ],
              "properties": {
                "destination": {
                  "type": "string"
                },
                "source": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "create_thought"
          ],
          "properties": {
            "create_thought": {
              "type": "object",
              "required": [
                "load",
                "name",
                "particle",
                "program",
                "trigger"
              ],
              "properties": {
                "load": {
                  "$ref": "#/definitions/Load"
                },
                "name": {
                  "type": "string"
                },
                "particle": {
                  "type": "string"
                },
                "program": {
                  "type": "string"
                },
                "trigger": {
                  "$ref": "#/definitions/Trigger"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "forget_thought"
          ],
          "properties": {
            "forget_thought": {
              "type": "object",
              "required": [
                "name",
                "program"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "program": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "change_thought_input"
          ],
          "properties": {
            "change_thought_input": {
              "type": "object",
              "required": [
                "input",
                "name",
                "program"
              ],
              "properties": {
                "input": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "program": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "change_thought_period"
          ],
          "properties": {
            "change_thought_period": {
              "type": "object",
              "required": [
                "name",
                "period",
                "program"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "period": {
                  "type": "integer",
                  "format": "uint64",
                  "minimum": 0.0
                },
                "program": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "change_thought_block"
          ],
          "properties": {
            "change_thought_block": {
              "type": "object",
              "required": [
                "block",
                "name",
                "program"
              ],
              "properties": {
                "block": {
                  "type": "integer",
                  "format": "uint64",
                  "minimum": 0.0
                },
                "name": {
                  "type": "string"
                },
                "program": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "create_pool"
          ],
          "properties": {
            "create_pool": {
              "type": "object",
              "required": [
                "deposit_coins",
                "pool_creator_address",
                "pool_type_id"
              ],
              "properties": {
                "deposit_coins": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Coin"
                  }
                },
                "pool_creator_address": {
                  "type": "string"
                },
                "pool_type_id": {
                  "type": "integer",
                  "format": "uint32",
                  "minimum": 0.0
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "deposit_within_batch"
          ],
          "properties": {
            "deposit_within_batch": {
              "type": "object",
              "required": [
                "deposit_coins",
                "depositor_address",
                "pool_id"
              ],
              "properties": {
                "deposit_coins": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Coin"
                  }
                },
                "depositor_address": {
                  "type": "string"
                },
                "pool_id": {
                  "type": "integer",
                  "format": "uint64",
                  "minimum": 0.0
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "withdraw_within_batch"
          ],
          "properties": {
            "withdraw_within_batch": {
              "type": "object",
              "required": [
                "pool_coin",
                "pool_id",
                "withdrawer_address"
              ],
              "properties": {
                "pool_coin": {
                  "$ref": "#/definitions/Coin"
                },
                "pool_id": {
                  "type": "integer",
                  "format": "uint64",
                  "minimum": 0.0
                },
                "withdrawer_address": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "swap_within_batch"
          ],
          "properties": {
            "swap_within_batch": {
              "type": "object",
              "required": [
                "demand_coin_denom",
                "offer_coin",
                "offer_coin_fee",
                "order_price",
                "pool_id",
                "swap_requester_address",
                "swap_type_id"
              ],
              "properties": {
                "demand_coin_denom": {
                  "type": "string"
                },
                "offer_coin": {
                  "$ref": "#/definitions/Coin"
                },
                "offer_coin_fee": {
                  "$ref": "#/definitions/Coin"
                },
                "order_price": {
                  "$ref": "#/definitions/Decimal"
                },
                "pool_id": {
                  "type": "integer",
                  "format": "uint64",
                  "minimum": 0.0
                },
                "swap_requester_address": {
                  "type": "string"
                },
                "swap_type_id": {
                  "type": "integer",
                  "format": "uint32",
                  "minimum": 0.0
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "CyberRoute": {
      "description": "CyberRoute is enum type to represent cyber query route path",
      "type": "string",
      "enum": [
        "rank",
        "graph",
        "resources",
        "grid",
        "dmn",
        "bandwidth",
        "liquidity"
      ]
    },
    "Decimal": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    },
    "Link": {
      "type": "object",
      "required": [
        "from",
        "to"
      ],
      "properties": {
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        }
      }
    },
    "Load": {
      "type": "object",
      "required": [
        "gas_price",
        "input"
      ],
      "properties": {
        "gas_price": {
          "$ref": "#/definitions/Coin"
        },
        "input": {
          "type": "string"
        }
      }
    },
    "Trigger": {
      "type": "object",
      "required": [
        "block",
        "period"
      ],
      "properties": {
        "block": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "period": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      }
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
